{
  "ROSTemplateFormatVersion": "2015-09-01",
  "Description": "Create one container service cluster and deploy JStorm with its dependency Zookeeper.",
  "Parameters": {
    "ImageId": {
      "Type": "String",
      "Description": "Image Id, represents the image resource to startup one ECS instance, <a href='#/product/cn-beijing/list/imageList' target='_blank'>View image resources</a>",
      "Label": "ECS Image Id",
      "Default": "ubuntu_16_04_64_20G_alibase_20190513.vhd"
    },
    "ClusterName": {
      "Type": "String",
      "Description": "Cluster Name",
      "Label": "Cluster Name",
      "Default": "jStormCluster"
    },
    "IoOptimized": {
      "Type": "Boolean",
      "Description": "The 'optimized' instance can provide better IO performance.",
      "Label": "Io Optimized",
      "Default": true
    },
    "SystemDiskCategory": {
      "Type": "String",
      "Description": "System disk category: average cloud disk(cloud), efficient cloud disk(cloud_efficiency) or SSD cloud disk(cloud_ssd)",
      "Label": "System Disk Category",
      "Default": "cloud_ssd",
      "AllowedValues": [
        "cloud",
        "cloud_efficiency",
        "cloud_ssd"
      ]
    },
    "ClusterSize": {
      "Type": "Number",
      "Description": "The number of cluster nodes",
      "Label": "Cluster Size",
      "Default": "3"
    },
    "InstancePassword": {
      "Type": "String",
      "Description": "The root password of ECS instance. The password is a string of 8 to 41 characters and must contain uppercase/lowercase letters, numbers.",
      "ConstraintDescription": "Consist of 8 to 30 alphanumeric.",
      "Label": "ECS Instance Password",
      "MaxLength": "30",
      "MinLength": "8",
      "AllowedPattern": "[a-zA-Z][a-zA-Z0-9]*",
      "NoEcho": true,
      "Confirm": true
    },
    "InstanceType": {
      "Type": "String",
      "Description": "The ECS instance type, <a href='#/product/cn-beijing/list/typeList' target='_blank'>View instance types</a>",
      "Label": "ECS Instance Type",
      "Default": "ecs.c5.large",
      "AllowedValues": [
        "ecs.c5.large",
        "ecs.g5.large",
        "ecs.c5.xlarge",
        "ecs.g5.xlarge"
      ]
    },
    "SupervisorCount": {
      "Type": "Number",
      "Description": "The number to deploy Supervisor",
      "Label": "Supervisor Count",
      "Default": "2"
    },
    "VpcId": {
      "Type": "String",
      "Description": "VPC ID",
      "Label": "Vpc Id"
    },
    "VSwitchId": {
      "Type": "String",
      "Description": "VSW ID",
      "Label": "VSwitch Id"
    },
    "SubnetCidr": {
      "Type": "String",
      "Description": "Subnet for containers. The range allowed is 172.17.0.0/24 - 172.31.0.0/24. Make sure it's different from vpc and vswitch.",
      "Label": "Subnet Cidr",
      "Default": "172.26.1.0/24"
    }
  },
  "Resources": {
    "App": {
      "Type": "ALIYUN::CS::App",
      "Properties": {
        "Ca": {
          "Fn::GetAtt": [
            "MyCluster",
            "Ca"
          ]
        },
        "Cert": {
          "Fn::GetAtt": [
            "MyCluster",
            "Cert"
          ]
        },
        "ClusterId": {
          "Fn::GetAtt": [
            "MyCluster",
            "ClusterId"
          ]
        },
        "Key": {
          "Fn::GetAtt": [
            "MyCluster",
            "Key"
          ]
        },
        "MasterUrl": {
          "Fn::GetAtt": [
            "MyCluster",
            "MasterUrl"
          ]
        },
        "Name": "jstorm",
        "Template": {
          "Fn::Replace": [
            {
              "__supervisor_count__": {
                "Ref": "SupervisorCount"
              }
            },
            "zk1:\n    image: 'mesoscloud/zookeeper:3.4.8-ubuntu'\n    environment:\n        - MYID=1\n        - SERVERS=${COMPOSE_PROJECT_NAME}_zk1_1,${COMPOSE_PROJECT_NAME}_zk2_1,${COMPOSE_PROJECT_NAME}_zk3_1\n        - constraint:aliyun.node_index==1\n    restart: 'always'\nzk2:\n    image: 'mesoscloud/zookeeper:3.4.8-ubuntu'\n    environment:\n        - MYID=2\n        - SERVERS=${COMPOSE_PROJECT_NAME}_zk1_1,${COMPOSE_PROJECT_NAME}_zk2_1,${COMPOSE_PROJECT_NAME}_zk3_1\n        - constraint:aliyun.node_index==2\n    restart: 'always'\nzk3:\n    image: 'mesoscloud/zookeeper:3.4.8-ubuntu'\n    environment:\n        - MYID=3\n        - SERVERS=${COMPOSE_PROJECT_NAME}_zk1_1,${COMPOSE_PROJECT_NAME}_zk2_1,${COMPOSE_PROJECT_NAME}_zk3_1\n        - constraint:aliyun.node_index==3\n    restart: 'always'\nnimbus:\n    image: 'registry.cn-hangzhou.aliyuncs.com/jstorm-docker/jstorm'\n    environment:\n        - CHARACTER=nimbus\n        - ZK_ROOT=/jstorm.docker.root2\n        - ZK_HOSTS=${COMPOSE_PROJECT_NAME}_zk1_1,${COMPOSE_PROJECT_NAME}_zk2_1,${COMPOSE_PROJECT_NAME}_zk3_1\n        - CLUSTER_NAME=jstorm.docker.cluster\n    labels:\n        aliyun.routing.port_8080: 'http://nimbus'\n        aliyun.scale: '2'\n    restart: 'always'\n    links:\n        - zk1\n        - zk2\n        - zk3\nsupervisor:\n    image: 'registry.cn-hangzhou.aliyuncs.com/jstorm-docker/jstorm'\n    environment:\n        - CHARACTER=supervisor\n        - NIMBUS_HOSTS=jstorm_nimbus_1\n        - ZK_ROOT=/jstorm.docker.root2\n        - ZK_HOSTS=${COMPOSE_PROJECT_NAME}_zk1_1,${COMPOSE_PROJECT_NAME}_zk2_1,${COMPOSE_PROJECT_NAME}_zk3_1\n        - CLUSTER_NAME=jstorm.docker.cluster\n    labels:\n        aliyun.routing.port_8080: 'http://supervisor'\n        aliyun.scale: '__supervisor_count__'\n    restart: 'always'\n    links:\n        - nimbus\n"
          ]
        }
      }
    },
    "MyCluster": {
      "Type": "ALIYUN::CS::Cluster",
      "Properties": {
        "IoOptimized": {
          "Ref": "IoOptimized"
        },
        "Name": {
          "Ref": "ClusterName"
        },
        "ImageId": {
          "Ref": "ImageId"
        },
        "Password": {
          "Ref": "InstancePassword"
        },
        "SystemDiskCategory": {
          "Ref": "SystemDiskCategory"
        },
        "Size": {
          "Ref": "ClusterSize"
        },
        "InstanceType": {
          "Ref": "InstanceType"
        },
        "VpcId": {
          "Ref": "VpcId"
        },
        "VSwitchId": {
          "Ref": "VSwitchId"
        },
        "SubnetCidr": {
          "Ref": "SubnetCidr"
        }
      }
    }
  },
  "Outputs": {
    "CaCert": {
      "Description": "CA cert of the cluster.",
      "Value": {
        "Fn::GetAtt": [
          "MyCluster",
          "Ca"
        ]
      }
    },
    "ClientCert": {
      "Description": "Client cert of the cluster.",
      "Value": {
        "Fn::GetAtt": [
          "MyCluster",
          "Cert"
        ]
      }
    },
    "ClientKey": {
      "Description": "Client key of the cluster.",
      "Value": {
        "Fn::GetAtt": [
          "MyCluster",
          "Key"
        ]
      }
    },
    "ClusterId": {
      "Description": "Id of the cluster.",
      "Value": {
        "Fn::GetAtt": [
          "MyCluster",
          "ClusterId"
        ]
      }
    },
    "Endpoints": {
      "Description": "Endpoints of the app.",
      "Value": {
        "Fn::GetAtt": [
          "App",
          "Endpoints"
        ]
      }
    },
    "MasterUrl": {
      "Description": "Master url of the cluster.",
      "Value": {
        "Fn::GetAtt": [
          "MyCluster",
          "MasterUrl"
        ]
      }
    }
  }
}