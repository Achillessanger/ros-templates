{
  "ROSTemplateFormatVersion": "2015-09-01",
  "Description": "Creates a wordpress instance",
  "Parameters": {
    "ImageId": {
      "Type": "String",
      "Description": "Image Id, represents the image resource to startup one ECS instance, <a href='#/product/cn-beijing/list/imageList' target='_blank'>View image resources</a>",
      "Label": "ECS Image Id",
      "Default": "centos_7"
    },
    "InstanceType": {
      "Type": "String",
      "Description": "Type of ECS instance",
      "Label": "ECS Instance Type",
      "Default": "ecs.c5.large",
      "AllowedValues": [
        "ecs.c5.large",
        "ecs.g5.large",
        "ecs.c5.xlarge",
        "ecs.g5.xlarge"
      ]
    },
    "InstancePassword": {
      "Type": "String",
      "Description": "The root password of ECS instance. The password is a string of 8 to 30 characters and must contain uppercase/lowercase letters, numbers.",
      "ConstraintDescription": "Consist of 8 to 30 alphanumeric.",
      "Label": "ECS Instance Password",
      "MaxLength": "30",
      "MinLength": "8",
      "AllowedPattern": "[a-zA-Z][a-zA-Z0-9]*",
      "NoEcho": true,
      "Confirm": true
    },
    "VpcCidrBlock": {
      "Type": "String",
      "Description": "The IP address range of the VPC in the CIDR block form. You can use the following IP address ranges and their subnets:\n10.0.0.0/8\n172.16.0.0/12 (Default)\n192.168.0.0/16",
      "Label": "The VPC Cidrblock",
      "Default": "10.0.0.0/8",
      "AllowedValues": [
        "192.168.0.0/16",
        "172.16.0.0/12",
        "10.0.0.0/8"
      ]
    },
    "VSwitchCidrBlock": {
      "Type": "String",
      "Description": "CIDR Block of created VSwitch, It must belong to itself VPC CIDR block.",
      "Label": "The VSwitch 2 Cidrblock",
      "Default": "10.0.10.0/24"
    },
    "DBInstanceClass": {
      "Type": "String",
      "Description": "The RDS instance class",
      "Label": "DB Instance Class",
      "Default": "rds.mysql.t1.small",
      "AllowedValues": [
        "rds.mysql.t1.small",
        "rds.mysql.s1.small",
        "rds.mysql.s2.large",
        "rds.mysql.s2.xlarge",
        "rds.mysql.s3.large",
        "rds.mysql.m1.medium",
        "rds.mysql.c1.large",
        "rds.mysql.c1.xlarge",
        "rds.mysql.c2.xlarge",
        "rds.mysql.c2.xlp2",
        "rds.mysql.c2.2xlarge",
        "rds.mysql.st.d13"
      ]
    },
    "DBInstanceStorage": {
      "Type": "Number",
      "Description": "Incrementing in every 5G, unit: GB",
      "ConstraintDescription": "Incrementing in every 5G, unit: GB",
      "Label": "DB Instance Storage",
      "Default": 50,
      "MaxValue": 2000,
      "MinValue": 5
    },
    "ZoneId": {
      "Type": "String",
      "Description": "Ecs Available Zone Id, <a href='#/product/cn-beijing/list/zoneList' target='_blank'>View zoneid info</a>",
      "Label": "ECS Zone Id"
    },
    "Engine": {
      "Type": "String",
      "Description": "Database instance engine type. Support MySQL/SQLServer/PostgreSQL/PPAS/MariaDB now.",
      "Label": "Database Instance Engine Type",
      "Default": "MySQL",
      "AllowedValues": [
        "MySQL",
        "SQLServer",
        "PostgreSQL",
        "PPAS"
      ]
    },
    "EngineVersion": {
      "Type": "String",
      "Description": "MySQL:5.5/5.6; SQLServer:2008r2; PostgreSQL:9.4; PPAS:9.3",
      "Label": "Database Engine Version",
      "Default": "5.6",
      "AllowedValues": [
        "5.5",
        "5.6",
        "2008r2",
        "9.4",
        "9.3"
      ]
    },
    "DBName": {
      "Type": "String",
      "Description": "Name of WordPress database",
      "ConstraintDescription": "Consist of 2 to 64 characters of lowercase letters, underline. Must begin with a letter and be end with an alphanumeric character",
      "Label": "DB Name",
      "Default": "wordpress",
      "MaxLength": "64",
      "MinLength": "2",
      "AllowedPattern": "[a-z]{1}[a-z0-9-_]*[a-z0-9]{1}"
    },
    "DBUser": {
      "Type": "String",
      "Description": "The username of WordPress database",
      "ConstraintDescription": "Consist of 2 to 16 characters of lowercase letters, underline. Must begin with a letter and be end with an alphanumeric character",
      "Label": "DB Username",
      "Default": "wpuser",
      "MaxLength": "16",
      "MinLength": "2",
      "AllowedPattern": "[a-z]{1}[a-z0-9_]*[a-z0-9]{1}"
    },
    "DBPassword": {
      "Type": "String",
      "Description": "The password of WordPress database",
      "ConstraintDescription": "Consist of 8 to 32 capital, lowercase, numeric, or special characters. At least three different types of characters are required. Allowed special characters are \"!@#$%^&*()_+-=\".",
      "Label": "DB Password",
      "MaxLength": "32",
      "MinLength": "8",
      "NoEcho": true,
      "Confirm": true
    }
  },
  "Resources": {
    "VSwitch": {
      "Type": "ALIYUN::ECS::VSwitch",
      "Properties": {
        "CidrBlock": {
          "Ref": "VSwitchCidrBlock"
        },
        "ZoneId": {
          "Ref": "ZoneId"
        },
        "VpcId": {
          "Fn::GetAtt": [
            "Vpc",
            "VpcId"
          ]
        }
      }
    },
    "Vpc": {
      "Type": "ALIYUN::ECS::VPC",
      "Properties": {
        "CidrBlock": {
          "Ref": "VpcCidrBlock"
        },
        "VpcName": "wordpress_vpc"
      }
    },
    "SecurityGroup": {
      "Type": "ALIYUN::ECS::SecurityGroup",
      "Properties": {
        "SecurityGroupName": "wordpress_sg",
        "VpcId": {
          "Ref": "Vpc"
        }
      }
    },
    "Database": {
      "Type": "ALIYUN::RDS::DBInstance",
      "Properties": {
        "DBInstanceClass": {
          "Ref": "DBInstanceClass"
        },
        "DBMappings": [
          {
            "DBName": {
              "Ref": "DBName"
            },
            "CharacterSetName": "utf8"
          }
        ],
        "DBInstanceDescription": "DataBase",
        "DBInstanceStorage": {
          "Ref": "DBInstanceStorage"
        },
        "VSwitchId": {
          "Ref": "VSwitch"
        },
        "Engine": {
          "Ref": "Engine"
        },
        "MasterUserPassword": {
          "Ref": "DBPassword"
        },
        "MasterUsername": {
          "Ref": "DBUser"
        },
        "VPCId": {
          "Ref": "Vpc"
        },
        "EngineVersion": {
          "Ref": "EngineVersion"
        },
        "SecurityIPList": "0.0.0.0/0"
      }
    },
    "SecurityGroupIngress": {
      "Type": "ALIYUN::ECS::SecurityGroupIngress",
      "Properties": {
        "SourceCidrIp": "0.0.0.0/0",
        "SecurityGroupId": {
          "Ref": "SecurityGroup"
        },
        "IpProtocol": "all",
        "PortRange": "-1/-1"
      }
    },
    "WebServer": {
      "Type": "ALIYUN::ECS::Instance",
      "Properties": {
        "IoOptimized": "optimized",
        "ImageId": {
          "Ref": "ImageId"
        },
        "SecurityGroupId": {
          "Ref": "SecurityGroup"
        },
        "Password": {
          "Ref": "InstancePassword"
        },
        "InternetMaxBandwidthOut": 80,
        "UserData": {
          "Fn::Replace": [
            {
              "print": "echo"
            },
            {
              "Fn::Join": [
                "",
                [
                  "#!/bin/sh",
                  "\n",
                  "DatabaseUser=",
                  {
                    "Ref": "DBUser"
                  },
                  "\n",
                  "DatabasePwd=",
                  {
                    "Ref": "DBPassword"
                  },
                  "\n",
                  "DatabaseName=",
                  {
                    "Ref": "DBName"
                  },
                  "\n",
                  "DatabaseHost=",
                  {
                    "Fn::GetAtt": [
                      "Database",
                      "InnerConnectionString"
                    ]
                  },
                  "\n",
                  "WebRootPath='/var/www/html'\n",
                  "ApacheIndex='Options Indexes FollowSymLinks'\n",
                  "ApacheIndexReplace='Options Indexes FollowSymLinks'\n",
                  "mv /etc/yum.repos.d/CentOS-Base.repo /etc/yum.repos.d/CentOS-Base.repo.backup\n",
                  "wget -O /etc/yum.repos.d/CentOS-Base.repo http://mirrors.aliyun.com/repo/Centos-7.repo\n",
                  "yum makecache\n",
                  "yum install -y curl httpd mysql-server php56 php56-php-mysql\n",
                  "#yum install -y curl httpd mysql-server php56 php-common php-mysql\n",
                  "yum install -y php56-php-gd php56-php-imap php56-php-ldap php56-php-odbc php56-php-xmlrpc\n",
                  "#yum install -y php-gd php-imap php-ldap php-odbc php-pear php-xml php-xmlrpc\n",
                  "chkconfig httpd on\n",
                  "wget http://wordpress.org/latest.tar.gz\n",
                  "tar -xzvf latest.tar.gz\n",
                  "sed -i \"s/database_name_here/$DatabaseName/\" wordpress/wp-config-sample.php\n",
                  "sed -i \"s/username_here/$DatabaseUser/\" wordpress/wp-config-sample.php\n",
                  "sed -i \"s/password_here/${DatabasePwd:-$DatabasePwdDef}/\" wordpress/wp-config-sample.php\n",
                  "sed -i \"s/localhost/$DatabaseHost/\" wordpress/wp-config-sample.php\n",
                  "mv wordpress/wp-config-sample.php wordpress/wp-config.php\n",
                  "cp -a wordpress/* $WebRootPath\n",
                  "rm -rf wordpress*\n",
                  "service httpd stop\n",
                  "usermod -d $WebRootPath apache &>/dev/null\n",
                  "chown apache:apache -R $WebRootPath\n",
                  "sed -i \"s/$ApacheIndex/$ApacheIndexReplace/\" /etc/httpd/conf/httpd.conf\n",
                  "service httpd start\n"
                ]
              ]
            }
          ]
        },
        "VSwitchId": {
          "Ref": "VSwitch"
        },
        "VpcId": {
          "Ref": "Vpc"
        },
        "InstanceType": {
          "Ref": "InstanceType"
        }
      },
      "DependsOn": "Database"
    }
  },
  "Outputs": {
    "InstanceIp": {
      "Description": "Public IP address of WebServer instance.",
      "Value": {
        "Fn::GetAtt": [
          "WebServer",
          "PublicIp"
        ]
      }
    },
    "InstanceId": {
      "Description": "The instance id of WebServer instance.",
      "Value": {
        "Fn::GetAtt": [
          "WebServer",
          "InstanceId"
        ]
      }
    },
    "InnerConnectionString": {
      "Description": "DB instance connection url by Intranet.",
      "Value": {
        "Fn::GetAtt": [
          "Database",
          "InnerConnectionString"
        ]
      }
    },
    "DBInstanceId": {
      "Description": "The instance id of created database instance.",
      "Value": {
        "Fn::GetAtt": [
          "Database",
          "DBInstanceId"
        ]
      }
    }
  }
}