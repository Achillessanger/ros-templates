ROSTemplateFormatVersion: '2015-09-01'
Description: Deploy LNMP(Linux+Nginx+MySQL+PHP) stack on 1 ECS instance. *** WARNING
  *** Only support CentOS-7.
Parameters:
  NginxDownloadUrl:
    Type: String
    Label: Nginx Download Url
    Description: The download path of nginx-*.rpm
    Default: http://nginx.org/packages/centos/7/noarch/RPMS/nginx-release-centos-7-0.el7.ngx.noarch.rpm
  DBPassword:
    Type: String
    Label: DB Password
    Description: Password MySQL database access
    ConstraintDescription: Must contain only alphanumeric characters.
    AllowedPattern: '[a-zA-Z0-9]*'
    MinLength: '1'
    MaxLength: '41'
    NoEcho: true
    Confirm: true
  ZoneId:
    Type: String
    Label: The ECS Available Zone ID
    Description: The ECS Available Zone ID, Notice:Whether cloned ecs Type is supported
      in the available zone.<a href='#/product/cn-beijing/list/zoneList' target='_blank'>View
      zoneid info</a>
  ImageId:
    Type: String
    Label: ECS Image Id
    Description: Image Id, represents the image resource to startup one ECS instance,
      <a href='#/product/cn-beijing/list/imageList' target='_blank'>View image resources</a>
    Default: centos_7
  DBName:
    Type: String
    Label: DB Name
    Description: MySQL database name
    ConstraintDescription: Must begin with a letter and contain only alphanumeric
      characters.
    Default: MyDatabase
    AllowedPattern: '[a-zA-Z][a-zA-Z0-9]*'
    MinLength: '1'
    MaxLength: '64'
  DBUser:
    Type: String
    Label: DB Username
    Description: Username for MySQL database access
    ConstraintDescription: Must begin with a letter and contain only alphanumeric
      characters.
    MinLength: '1'
    MaxLength: '16'
  DBRootPassword:
    Type: String
    Label: DB Root Password
    Description: Root password for MySQL
    ConstraintDescription: must contain only alphanumeric characters and numbers.
    AllowedPattern: '[a-zA-Z0-9]*'
    MinLength: '1'
    MaxLength: '41'
    NoEcho: true
    Confirm: true
  InstanceType:
    Type: String
    Label: ECS Instance Type
    Description: The ECS instance type, <a href='#/product/cn-beijing/list/typeList'
      target='_blank'>View instance types</a>
    Default: ecs.c5.large
    AllowedValues:
    - ecs.c5.large
    - ecs.g5.large
    - ecs.c5.xlarge
    - ecs.g5.xlarge
  SystemDiskCategory:
    Type: String
    Label: System Disk Category
    Description: 'System disk category: average cloud disk(cloud), efficient cloud
      disk(cloud_efficiency) or SSD cloud disk(cloud_ssd)'
    Default: cloud_ssd
    AllowedValues:
    - cloud_efficiency
    - cloud_ssd
  InstancePassword:
    Type: String
    Label: Instance Password
    Description: The login password of ECS instances
    ConstraintDescription: Consist of 8 to 41 characters of alphanumeric characters
    AllowedPattern: '[a-zA-Z][a-zA-Z0-9]*'
    MinLength: '8'
    MaxLength: '41'
    NoEcho: true
    Confirm: true
Resources:
  Vpc:
    Type: ALIYUN::ECS::VPC
    Properties:
      CidrBlock: 192.168.0.0/16
  VSwitch:
    Type: ALIYUN::ECS::VSwitch
    Properties:
      ZoneId:
        Ref: ZoneId
      VpcId:
        Fn::GetAtt:
        - Vpc
        - VpcId
      CidrBlock: 192.168.1.0/24
  WebServerConditionHandle:
    Type: ALIYUN::ROS::WaitConditionHandle
    Properties: {}
  SecurityGroup:
    Type: ALIYUN::ECS::SecurityGroup
    Properties:
      VpcId:
        Ref: Vpc
      SecurityGroupIngress:
      - PortRange: -1/-1
        Priority: 1
        SourceCidrIp: 0.0.0.0/0
        IpProtocol: all
        NicType: intranet
      SecurityGroupEgress:
      - PortRange: -1/-1
        Priority: 1
        IpProtocol: all
        DestCidrIp: 0.0.0.0/0
        NicType: intranet
  WebServer:
    Type: ALIYUN::ECS::Instance
    Properties:
      VpcId:
        Fn::GetAtt:
        - Vpc
        - VpcId
      VSwitchId:
        Ref: VSwitch
      SecurityGroupId:
        Ref: SecurityGroup
      ImageId:
        Ref: ImageId
      InternetMaxBandwidthOut: 80
      IoOptimized: optimized
      UserData:
        Fn::Replace:
        - ros-notify:
            Fn::GetAtt:
            - WebServerConditionHandle
            - CurlCli
        - Fn::Join:
          - ''
          - - "#!/bin/bash \n"
            - NginxUrl=
            - Ref: NginxDownloadUrl
            - '

              '
            - dbname=
            - Ref: DBName
            - '

              '
            - dbuser=
            - Ref: DBUser
            - '

              '
            - dbpassword=
            - Ref: DBPassword
            - '

              '
            - dbrootpassword=
            - Ref: DBRootPassword
            - '

              '
            - "export HOME=/root \n"
            - "export HOSTNAME=`hostname` \n"
            - "systemctl stop firewalld.service \n"
            - "systemctl disable firewalld.service \n"
            - "sed -i 's/^SELINUX=/# SELINUX=/' /etc/selinux/config \n"
            - "sed -i '/# SELINUX=/a SELINUX=disabled' /etc/selinux/config \n"
            - "setenforce 0 \n"
            - "yum install yum-priorities -y \n"
            - "yum -y install aria2 \n"
            - "aria2c $NginxUrl \n"
            - "rpm -ivh nginx-*.rpm \n"
            - "yum -y install nginx \n"
            - "systemctl start nginx.service \n"
            - "systemctl enable nginx.service \n"
            - "yum -y install php-fpm \n"
            - "systemctl start php-fpm.service \n"
            - "systemctl enable php-fpm.service \n"
            - "sed -i '/FastCGI/,/htaccess/s/    #/    /' /etc/nginx/conf.d/default.conf\
              \ \n"
            - "sed -i '/FastCGI/s/^    /    #/' /etc/nginx/conf.d/default.conf \n"
            - "sed -i '/htaccess/s/^    /    #/' /etc/nginx/conf.d/default.conf \n"
            - "sed -i '/SCRIPT_FILENAME/s/\\/scripts/\\/usr\\/share\\/nginx\\/html\\\
              //' /etc/nginx/conf.d/default.conf \n"
            - "yum -y install mariadb mariadb-server \n"
            - "systemctl start mariadb.service \n"
            - "systemctl enable mariadb.service \n"
            - "yum -y install php php-mysql php-gd libjpeg* php-ldap php-odbc php-pear\
              \ php-xml php-xmlrpc php-mbstring php-bcmath php-mhash php-mcrypt \n"
            - "MDSRING=`find / -name mbstring.so` \n"
            - "echo extension=$MDSRING >> /etc/php.ini \n"
            - "systemctl restart mariadb.service \n"
            - "mysqladmin -u root password \"$dbrootpassword\" \n"
            - "$(mysql $dbname -u root --password=\"$dbrootpassword\" >/dev/null 2>&1\
              \ </dev/null); (( $? != 0 )) \n"
            - "echo CREATE DATABASE $dbname \\; > /tmp/setup.mysql \n"
            - "echo GRANT ALL ON $dbname.* TO \"$dbuser\"@\"localhost\" IDENTIFIED\
              \ BY \"'$dbpassword'\" \\; >> /tmp/setup.mysql \n"
            - "mysql -u root --password=\"$dbrootpassword\" < /tmp/setup.mysql \n"
            - "$(mysql $dbname -u root --password=\"$dbrootpassword\" >/dev/null 2>&1\
              \ </dev/null); (( $? != 0 )) \n"
            - "cd /root \n"
            - "systemctl restart php-fpm.service \n"
            - "systemctl restart nginx.service \n"
            - "echo \\<?php >  /usr/share/nginx/html/test.php \n"
            - "echo \\$conn=mysql_connect\\(\"'127.0.0.1'\", \"'$dbuser'\", \"'$dbpassword'\"\
              \\)\\; >>  /usr/share/nginx/html/test.php \n"
            - "echo if \\(\\$conn\\){ >>  /usr/share/nginx/html/test.php \n"
            - "echo   echo \\\"LNMP platform connect to mysql is successful\\!\\\"\
              \\; >>  /usr/share/nginx/html/test.php \n"
            - "echo   }else{  >>  /usr/share/nginx/html/test.php \n"
            - "echo echo \\\"LNMP platform connect to mysql is failed\\!\\\"\\;  >>\
              \  /usr/share/nginx/html/test.php \n"
            - "echo }  >>  /usr/share/nginx/html/test.php \n"
            - "echo  phpinfo\\(\\)\\;  >>  /usr/share/nginx/html/test.php \n"
            - "echo \\?\\>  >>  /usr/share/nginx/html/test.php \n"
            - 'ros-notify -d ''{"data" : "Install LNMP stack."}''

              '
      InstanceType:
        Ref: InstanceType
      SystemDiskCategory:
        Ref: SystemDiskCategory
      Password:
        Ref: InstancePassword
  WebServerWaitCondition:
    Type: ALIYUN::ROS::WaitCondition
    Properties:
      Timeout: 1800
      Count: 1
      Handle:
        Ref: WebServerConditionHandle
    DependsOn: WebServer
Outputs:
  NginxWebsiteURL:
    Description: URL for newly created Nginx home page.
    Value:
      Fn::Join:
      - ''
      - - http://
        - Fn::GetAtt:
          - WebServer
          - PublicIp
        - :80/test.php
