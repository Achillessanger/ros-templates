{
  "ROSTemplateFormatVersion": "2015-09-01",
  "Parameters": {
    "TopicName": {
      "Type": "String",
      "Description": "Topic name",
      "MinLength": 1,
      "MaxLength": 256
    },
    "RuleName": {
      "Type": "String",
      "Description": "The name of the alert rule."
    },
    "Category": {
      "Type": "String",
      "Description": "The abbreviation of the service name. Valid values:\nECS (including Alibaba Cloud and non-Alibaba Cloud hosts)\nRDS (ApsaraDB for RDS)\nADS (AnalyticDB)\nSLB (Server Load Balancer)\nVPC (Virtual Private Cloud)\nAPIGATEWAY (API Gateway)\nCDN\nCS (Container Service for Swarm)\nDCDN (Dynamic Route for CDN)\nDDoS (distributed denial of service)\nEIP (Elastic IP)\nELASTICSEARCH (Elasticsearch)\nEMR (E-MapReduce)\nESS (Auto Scaling)\nHBASE (ApsaraDB for HBase)\nIOT_EDGE (IoT Edge)\nK8S_POD (k8s pod)\nKVSTORE_SHARDING (ApsaraDB for Redis cluster version)\nKVSTORE_SPLITRW (ApsaraDB for Redis read/write splitting version)\nKVSTORE_STANDARD (ApsaraDB for Redis standard version)\nMEMCACHE (ApsaraDB for Memcache)\nMNS (Message Service)\nMONGODB (ApsaraDB for MongoDB replica set instances)\nMONGODB_CLUSTER (ApsaraDB for MongoDB cluster version)\nMONGODB_SHARDING (ApsaraDB for MongoDB sharded clusters)\nMQ_TOPIC (Message Service topic)\nOCS (original version of ApsaraDB for Memcache)\nOPENSEARCH (Open Search)\nOSS (Object Storage Service)\nPOLARDB (ApsaraDB for POLARDB)\nPETADATA (HybridDB for MySQL)\nSCDN (Secure Content Delivery Network)\nSHAREBANDWIDTHPACKAGES (shared bandwidth package)\nSLS (Log Service)\nVPN (VPN Gateway)"
    },
    "RuleId": {
      "Type": "String",
      "Description": "The ID of the alert rule. The IDs of alert rules are generated by callers to ensure\nuniqueness.",
      "Default": "mytest"
    },
    "Namespace": {
      "Type": "String",
      "Description": "The data namespace of the service. For more information, call DescribeMetricMetaList\nor see Preset metrics reference."
    },
    "GroupId": {
      "Type": "String",
      "Description": "The ID of application group."
    },
    "MetricName": {
      "Type": "String",
      "Description": "The name of the metric. For more information, call DescribeMetricMetaList or see Preset metrics reference."
    },
    "Escalations": {
      "Type": "Json"
    },
    "NoEffectiveInterval": {
      "Type": "String",
      "Description": "The period when the alert rule is ineffective.",
      "Default": null
    },
    "SilenceTime": {
      "Type": "Number",
      "Description": "The duration of the mute period during which new alerts are not sent even if the trigger\nconditions are met. Unit: second. Default value: 86400. Minimum value: 60.",
      "MinValue": 60,
      "Default": null
    },
    "Dimensions": {
      "Type": "String",
      "Description": "The expended resource dimensions.",
      "Default": null
    },
    "Period": {
      "Type": "Number",
      "Description": "The aggregation period. Unite: second.",
      "Default": null
    },
    "EffectiveInterval": {
      "Type": "String",
      "Description": "The period when the alert rule is effective.",
      "Default": null
    },
    "EmailSubject": {
      "Type": "String",
      "Description": "The subject of the alert notification email.",
      "Default": null
    },
    "Webhook": {
      "Type": "String",
      "Description": "The URL of the callback triggered when an alert occurs.",
      "Default": null
    },
    "Interval": {
      "Type": "Number",
      "Description": "The detection period of alerts.",
      "Default": null
    }
  },
  "Resources": {
    "GroupMetricRule": {
      "Type": "ALIYUN::CMS::GroupMetricRule",
      "Properties": {
        "NoEffectiveInterval": {
          "Ref": "NoEffectiveInterval"
        },
        "SilenceTime": {
          "Ref": "SilenceTime"
        },
        "Category": {
          "Ref": "Category"
        },
        "RuleId": {
          "Ref": "RuleId"
        },
        "Dimensions": {
          "Ref": "Dimensions"
        },
        "Period": {
          "Ref": "Period"
        },
        "EffectiveInterval": {
          "Ref": "EffectiveInterval"
        },
        "Namespace": {
          "Ref": "Namespace"
        },
        "GroupId": {
          "Ref": "GroupId"
        },
        "MetricName": {
          "Ref": "MetricName"
        },
        "Escalations": {
          "Ref": "Escalations"
        },
        "EmailSubject": {
          "Ref": "EmailSubject"
        },
        "Webhook": {
          "Ref": "Webhook"
        },
        "RuleName": {
          "Ref": "RuleName"
        },
        "Interval": {
          "Ref": "Interval"
        }
      }
    },
    "Topic": {
      "Type": "ALIYUN::MNS::Topic",
      "Properties": {
        "TopicName": {
          "Ref": "TopicName"
        }
      }
    },
    "MetricRuleTargets": {
      "DependsOn": [
        "Topic",
        "GroupMetricRule"
      ],
      "Type": "ALIYUN::CMS::MetricRuleTargets",
      "Properties": {
        "RuleId": {
          "Ref": "GroupMetricRule"
        },
        "Targets": [
          {
            "Level": "WARN",
            "Id": "1",
            "Arn": {
              "Fn::Sub": [
                "${TopicArn}/message",
                {
                  "TopicArn": {
                    "Fn::GetAtt": [
                      "Topic",
                      "ARN.WithSlash"
                    ]
                  }
                }
              ]
            }
          }
        ]
      }
    }
  },
  "Outputs": {
    "RuleId": {
      "Description": "Rule ID.",
      "Value": {
        "Fn::GetAtt": [
          "GroupMetricRule",
          "RuleId"
        ]
      }
    },
    "Arns": {
      "Description": "The ARN list of targets",
      "Value": {
        "Fn::GetAtt": [
          "MetricRuleTargets",
          "Arns"
        ]
      }
    },
    "Ids": {
      "Description": "The ID list of targets",
      "Value": {
        "Fn::GetAtt": [
          "MetricRuleTargets",
          "Ids"
        ]
      }
    }
  }
}