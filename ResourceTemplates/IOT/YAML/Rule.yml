ROSTemplateFormatVersion: '2015-09-01'
Parameters:
  DataType:
    Default: null
    Description: 'The format of the data to be processed by the rule. You must specify
      the format of device data to be processed for this parameter. Valid values:  JSON:
      JSON data BINARY: binary data'
    Type: String
  IotInstanceId:
    Default: null
    Description: The ID of the instance. This parameter is not required for public
      instances. However, the parameter is required for the instances that you have
      purchased.
    Type: String
  Name:
    Description: The name of the rule. The name must be 1 to 30 characters in length
      and can contain English letters, digits, underscores (_), and hyphens (-). Chinese
      language is also supported. Each Chinese symbol occupies 2 characters.
    Type: String
  ProductKey:
    Default: null
    Description: The ProductKey of the product to which the rule applies.
    Type: String
  ResourceGroupId:
    Default: null
    Description: The ID of the resource group to which the rule is assigned. You can
      view the resource group information in the Resource Management console.  If
      you do not specify this parameter, the rule is assigned to the default resource
      group.
    Type: String
  RuleDesc:
    Default: null
    Description: The description of the rule. The description can be up to 100 characters
      in length. Each Chinese symbol occupies 1 characters.
    Type: String
  Select:
    Default: null
    Description: The SQL SELECT statement that you want to execute. For more information,
      seeSQL expressions.
    Type: String
  ShortTopic:
    Default: null
    Description: 'The topic to which this rule is applied. Syntax: ${deviceName}/topicShortName.
      ${deviceName}specifies the name of the device, and topicShortNamespecifies the
      custom name of the topic.  Basic communication topics or Thing Specification
      Language (TSL)-based communication topics. Syntax: ${deviceName}/topicShortName.
      You can replace ${deviceName} with the + wildcard. The wildcard indicates that
      the topic applies to all devices under the product. Valid values of topicShortName:
      /thing/event/property/post: submits the property data of a device. /thing/event/${tsl.event.identifier}/post:
      submits the event data of a device.${tsl.event.identifier} specifies the identifier
      of an event in the TSL. /thing/lifecycle: submits device lifecycle changes.
      /thing/downlink/reply/message: sends a response to a request from IoT Platform.
      /thing/list/found: submits the data when a gateway detects a new sub-device.
      /thing/topo/lifecycle: submits device topology changes. /thing/event/property/history/post:
      submits historical property data of a device. /thing/event/${tsl.event.identifier}/post:
      submits the historical event data of a device.${tsl.event.identifier}specifies
      the identifier of an event in the TSL. /ota/upgrade: submits OTA update status.
      /ota/version/post: submits OTA module versions. /thing/deviceinfo/update: submits
      device tag changes. /edge/driver/${driver_id}/point_post: submits pass-through
      data from Link IoT Edge.${driver_id} specifies the ID of the driver that a device
      uses to access Link IoT Edge.  ${packageId}/${jobId}/ota/job/status: submits
      the status of OTA update batches. This topic is a basic communication topic.
      ${packageId}specifies the ID of the firmware. ${jobId}specifies the ID of the
      update batch.  Custom topics. Example:${deviceName}/user/get.  You can call
      theQueryProductTopicoperation to view all custom topics of the product.  When
      you specify a custom topic, you can use the + and # wildcards.  You can replace
      ${deviceName} with the+ wildcard. The wildcard indicates that the topic applies
      to all devices under the product. You can replace the fields that follow ${deviceName}
      with /user/#. The # wildcard indicates that the topic applies whatever values
      are specified for the fields that follow/user.  For more information about how
      to use wildcards, see Wildcards in topics.  Topic that is used to submit device
      status changes: ${deviceName}.  You can use the+wildcard. In this case, the
      status changes of all devices under the product are submitted.'
    Type: String
  TopicType:
    Default: 0
    Description: '0: The topic is a basic communication topic or TSL-based communication
      topic. 1: The topic is a custom topic. 2: The topic is used to submit device
      status changes. Syntax: /as/mqtt/status/${productKey}/${deviceName}.'
    Type: Number
  Where:
    Default: null
    Description: The condition that is used to trigger the rule. For more information,
      seeSQL expressions.
    Type: String
Resources:
  IotRule:
    Properties:
      DataType:
        Ref: DataType
      IotInstanceId:
        Ref: IotInstanceId
      Name:
        Ref: Name
      ProductKey:
        Ref: ProductKey
      ResourceGroupId:
        Ref: ResourceGroupId
      RuleDesc:
        Ref: RuleDesc
      Select:
        Ref: Select
      ShortTopic:
        Ref: ShortTopic
      TopicType:
        Ref: TopicType
      Where:
        Ref: Where
    Type: ALIYUN::IOT::Rule
Outputs:
  DataType:
    Description: 'The format of the data to be processed by the rule. You must specify
      the format of device data to be processed for this parameter. Valid values:  JSON:
      JSON data BINARY: binary data'
    Value:
      Fn::GetAtt:
      - IotRule
      - DataType
  IotInstanceId:
    Description: The ID of the instance. This parameter is not required for public
      instances. However, the parameter is required for the instances that you have
      purchased.
    Value:
      Fn::GetAtt:
      - IotRule
      - IotInstanceId
  Name:
    Description: The name of the rule. The name must be 1 to 30 characters in length
      and can contain English letters, digits, underscores (_), and hyphens (-). Chinese
      language is also supported. Each Chinese symbol occupies 2 characters.
    Value:
      Fn::GetAtt:
      - IotRule
      - Name
  ProductKey:
    Description: The ProductKey of the product to which the rule applies.
    Value:
      Fn::GetAtt:
      - IotRule
      - ProductKey
  ResourceGroupId:
    Description: The ID of the resource group to which the rule is assigned. You can
      view the resource group information in the Resource Management console.  If
      you do not specify this parameter, the rule is assigned to the default resource
      group.
    Value:
      Fn::GetAtt:
      - IotRule
      - ResourceGroupId
  RuleDesc:
    Description: The description of the rule. The description can be up to 100 characters
      in length. Each Chinese symbol occupies 1 characters.
    Value:
      Fn::GetAtt:
      - IotRule
      - RuleDesc
  RuleId:
    Description: The ID of the rule. The rule ID is generated by the rules engine
      if the call was successful.
    Value:
      Fn::GetAtt:
      - IotRule
      - RuleId
  Select:
    Description: The SQL SELECT statement that you want to execute. For more information,
      seeSQL expressions.
    Value:
      Fn::GetAtt:
      - IotRule
      - Select
  ShortTopic:
    Description: 'The topic to which this rule is applied. Syntax: ${deviceName}/topicShortName.
      ${deviceName}specifies the name of the device, and topicShortNamespecifies the
      custom name of the topic.  Basic communication topics or Thing Specification
      Language (TSL)-based communication topics. Syntax: ${deviceName}/topicShortName.
      You can replace ${deviceName} with the + wildcard. The wildcard indicates that
      the topic applies to all devices under the product. Valid values of topicShortName:
      /thing/event/property/post: submits the property data of a device. /thing/event/${tsl.event.identifier}/post:
      submits the event data of a device.${tsl.event.identifier} specifies the identifier
      of an event in the TSL. /thing/lifecycle: submits device lifecycle changes.
      /thing/downlink/reply/message: sends a response to a request from IoT Platform.
      /thing/list/found: submits the data when a gateway detects a new sub-device.
      /thing/topo/lifecycle: submits device topology changes. /thing/event/property/history/post:
      submits historical property data of a device. /thing/event/${tsl.event.identifier}/post:
      submits the historical event data of a device.${tsl.event.identifier}specifies
      the identifier of an event in the TSL. /ota/upgrade: submits OTA update status.
      /ota/version/post: submits OTA module versions. /thing/deviceinfo/update: submits
      device tag changes. /edge/driver/${driver_id}/point_post: submits pass-through
      data from Link IoT Edge.${driver_id} specifies the ID of the driver that a device
      uses to access Link IoT Edge.  ${packageId}/${jobId}/ota/job/status: submits
      the status of OTA update batches. This topic is a basic communication topic.
      ${packageId}specifies the ID of the firmware. ${jobId}specifies the ID of the
      update batch.  Custom topics. Example:${deviceName}/user/get.  You can call
      theQueryProductTopicoperation to view all custom topics of the product.  When
      you specify a custom topic, you can use the + and # wildcards.  You can replace
      ${deviceName} with the+ wildcard. The wildcard indicates that the topic applies
      to all devices under the product. You can replace the fields that follow ${deviceName}
      with /user/#. The # wildcard indicates that the topic applies whatever values
      are specified for the fields that follow/user.  For more information about how
      to use wildcards, see Wildcards in topics.  Topic that is used to submit device
      status changes: ${deviceName}.  You can use the+wildcard. In this case, the
      status changes of all devices under the product are submitted.'
    Value:
      Fn::GetAtt:
      - IotRule
      - ShortTopic
  TopicType:
    Description: '0: The topic is a basic communication topic or TSL-based communication
      topic. 1: The topic is a custom topic. 2: The topic is used to submit device
      status changes. Syntax: /as/mqtt/status/${productKey}/${deviceName}.'
    Value:
      Fn::GetAtt:
      - IotRule
      - TopicType
  Where:
    Description: The condition that is used to trigger the rule. For more information,
      seeSQL expressions.
    Value:
      Fn::GetAtt:
      - IotRule
      - Where
