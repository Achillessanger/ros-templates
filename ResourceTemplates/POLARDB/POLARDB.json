{
  "ROSTemplateFormatVersion": "2015-09-01",
  "Parameters": {
    "ZoneId": {
      "Type": "String",
      "Description": "Zone Id."
    },
    "DBType": {
      "Type": "String",
      "Description": "Database type, value:\nMySQL\nPostgreSQL\nOracle",
      "Default": "MySQL"
    },
    "DBVersion": {
      "Type": "String",
      "Description": "The version of the database. Valid values:\nMySQL: 5.6 or 8.0\nPostgreSQL: 11\nOracle: 11",
      "Default": "5.6"
    },
    "DBNodeClass": {
      "Type": "String",
      "Description": "The node specifications of the cluster. For more information, see Specifications and pricing.",
      "Default": "polar.mysql.x4.medium"
    },
    "VSwitchName": {
      "Type": "String",
      "Default": "mytest"
    },
    "VpcName": {
      "Type": "String",
      "Default": "mytest"
    },
    "AccountName": {
      "Type": "String",
      "Description": "The name of the database account to be used.",
      "Default": "mytest"
    },
    "AccountPassword": {
      "Type": "String"
    },
    "AccountPrivilege": {
      "Type": "String",
      "Description": "The permissions of the database account on the database. Valid values: ReadWrite: has read and write permissions on the database. ReadOnly: has the read-only permission on the database. DMLOnly: runs only data manipulation language (DML) statements. DDLOnly: runs only data definition language (DDL) statements. Default value: ReadWrite. Separate multiple permissions with a comma (,).",
      "Default": "ReadWrite"
    },
    "ChangeAccountPrivilege": {
      "Type": "String",
      "Description": "The permissions of the database account on the database. Valid values: ReadWrite: has read and write permissions on the database. ReadOnly: has the read-only permission on the database. DMLOnly: runs only data manipulation language (DML) statements. DDLOnly: runs only data definition language (DDL) statements. Default value: ReadWrite. Separate multiple permissions with a comma (,).",
      "Default": "ReadOnly"
    },
    "AccountType": {
      "Type": "String",
      "Description": "The type of the database account. Valid values: -Normal: standard account. -Super: privileged account. Default value: Super. Currently, POLARDB PostgreSQL and POLARDB compatible with Oracle do not support standard accounts. You can create only one privileged account for an ApsaraDB for POLARDB cluster.",
      "Default": "Normal"
    },
    "DBName": {
      "Type": "String",
      "Description": "The name of the database to be created. The name must comply with the following rules:\nIt must start with a lowercase letter and consist of lowercase letters, digits, hyphens\n(-), and underscores (_).\nIt must end with a letter or a digit. It can be up to 64 characters in length.",
      "Default": "mytest"
    },
    "Amount": {
      "Type": "Number",
      "Description": "Number of nodes to be added to cluster.",
      "Default": 1
    },
    "SecurityIps": {
      "Type": "String",
      "Description": "The IP addresses to be added to the IP address whitelist group to be modified. Each\nwhitelist group can contain a maximum of 1,000 IP addresses. Separate multiple IP\naddresses with a comma (,). The following two formats are supported:\nIP address: for example, 10.23.12.24.\nClassless inter-domain routing (CIDR) block: for example, 10.23.12.24/24, where the\nsuffix /24 indicates the number of bits for the prefix of the IP address. The suffix\nranges from 1 to 32.",
      "Default": "0.0.0.0"
    },
    "NetType": {
      "Type": "String",
      "Description": "The network type of the connection string. \nIf set to Public, ROS will create, modify and delete Public address for you.\nIf set to Private, ROS will only modify Private address for you.\nDefault to Public.",
      "AllowedValues": [
        "Public",
        "Private"
      ],
      "Default": "Public"
    }
  },
  "Resources": {
    "VPC": {
      "Type": "ALIYUN::ECS::VPC",
      "Properties": {
        "VpcName": {
          "Ref": "VpcName"
        },
        "CidrBlock": "192.168.0.0/16"
      }
    },
    "VSwitch": {
      "DependsOn": "VPC",
      "Type": "ALIYUN::ECS::VSwitch",
      "Properties": {
        "VpcId": {
          "Ref": "VPC"
        },
        "VSwitchName": {
          "Ref": "VSwitchName"
        },
        "ZoneId": {
          "Ref": "ZoneId"
        },
        "CidrBlock": "192.168.10.0/24"
      }
    },
    "DBCluster": {
      "Type": "ALIYUN::POLARDB::DBCluster",
      "Properties": {
        "VpcId": {
          "Ref": "VPC"
        },
        "DBType": {
          "Ref": "DBType"
        },
        "ClusterNetworkType": "VPC",
        "ZoneId": {
          "Ref": "ZoneId"
        },
        "VSwitchId": {
          "Ref": "VSwitch"
        },
        "DBVersion": {
          "Ref": "DBVersion"
        },
        "DBNodeClass": {
          "Ref": "DBNodeClass"
        },
        "PayType": "Postpaid"
      }
    },
    "Account": {
      "Type": "ALIYUN::POLARDB::Account",
      "Properties": {
        "DBClusterId": {
          "Fn::GetAtt": [
            "DBCluster",
            "DBClusterId"
          ]
        },
        "AccountName": {
          "Ref": "AccountName"
        },
        "AccountPrivilege": {
          "Ref": "AccountPrivilege"
        },
        "AccountPassword": {
          "Ref": "AccountPassword"
        },
        "AccountType": {
          "Ref": "AccountType"
        }
      }
    },
    "DBInstance": {
      "Type": "ALIYUN::POLARDB::DBInstance",
      "DependsOn": [
        "DBCluster",
        "Account"
      ],
      "Properties": {
        "DBClusterId": {
          "Fn::GetAtt": [
            "DBCluster",
            "DBClusterId"
          ]
        },
        "CharacterSetName": "utf8",
        "AccountName": {
          "Ref": "AccountName"
        },
        "DBName": {
          "Ref": "DBName"
        }
      }
    },
    "DBNodes": {
      "Type": "ALIYUN::POLARDB::DBNodes",
      "DependsOn": [
        "DBInstance",
        "DBCluster"
      ],
      "Properties": {
        "DBClusterId": {
          "Fn::GetAtt": [
            "DBCluster",
            "DBClusterId"
          ]
        },
        "Amount": {
          "Ref": "Amount"
        }
      }
    },
    "AccountPrivilege1": {
      "Type": "ALIYUN::POLARDB::AccountPrivilege",
      "DependsOn": [
        "DBNodes"
      ],
      "Properties": {
        "DBClusterId": {
          "Fn::GetAtt": [
            "DBCluster",
            "DBClusterId"
          ]
        },
        "AccountPrivilege": {
          "Ref": "ChangeAccountPrivilege"
        },
        "DBName": {
          "Ref": "DBName"
        },
        "AccountName": {
          "Ref": "AccountName"
        }
      }
    },
    "DBClusterAccessWhiteList": {
      "Type": "ALIYUN::POLARDB::DBClusterAccessWhiteList",
      "DependsOn": [
        "AccountPrivilege1"
      ],
      "Properties": {
        "DBClusterId": {
          "Fn::GetAtt": [
            "DBCluster",
            "DBClusterId"
          ]
        },
        "SecurityIps": {
          "Ref": "SecurityIps"
        }
      }
    },
    "DBClusterEndpointAddress": {
      "Type": "ALIYUN::POLARDB::DBClusterEndpointAddress",
      "DependsOn": [
        "AccountPrivilege1"
      ],
      "Properties": {
        "DBClusterId": {
          "Fn::GetAtt": [
            "DBCluster",
            "DBClusterId"
          ]
        },
        "DBEndpointId": {
          "Fn::GetAtt": [
            "DBCluster",
            "ClusterEndpointId"
          ]
        },
        "NetType": {
          "Ref": "NetType"
        }
      }
    },
    "DBClusterEndpoint": {
      "Type": "ALIYUN::POLARDB::DBClusterEndpoint",
      "DependsOn": [
        "DBClusterEndpointAddress"
      ],
      "Properties": {
        "DBClusterId": {
          "Fn::GetAtt": [
            "DBCluster",
            "DBClusterId"
          ]
        }
      }
    }
  },
  "Outputs": {
    "DBClusterId": {
      "Description": "The ID of the ApsaraDB for POLARDB cluster.",
      "Value": {
        "Fn::GetAtt": [
          "DBCluster",
          "DBClusterId"
        ]
      }
    },
    "DBNodeIds": {
      "Description": "The ID list of added cluster nodes.",
      "Value": {
        "Fn::GetAtt": [
          "DBNodes",
          "DBNodeIds"
        ]
      }
    },
    "OrderIds": {
      "Description": "The order ID list of added cluster nodes.",
      "Value": {
        "Fn::GetAtt": [
          "DBNodes",
          "OrderIds"
        ]
      }
    },
    "DBEndpointId": {
      "Description": "DB cluster endpoint ID. E.g. pe-xxxxxxxx.",
      "Value": {
        "Fn::GetAtt": [
          "DBClusterEndpoint",
          "DBEndpointId"
        ]
      }
    },
    "ConnectionString": {
      "Description": "The connection string of the endpoint address.",
      "Value": {
        "Fn::GetAtt": [
          "DBClusterEndpointAddress",
          "ConnectionString"
        ]
      }
    },
    "Address": {
      "Description": "The details of the endpoint address.",
      "Value": {
        "Fn::GetAtt": [
          "DBClusterEndpointAddress",
          "Address"
        ]
      }
    }
  }
}