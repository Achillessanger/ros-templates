ROSTemplateFormatVersion: '2015-09-01'
Description: DDC for Aliyun
Conditions:
  CreateSlaveUcp:
    Fn::Not:
      Fn::Equals:
      - 0
      - Ref: ControllerSlaveMaxAmount
Mappings:
  FunctionMap:
    InstallDocker:
      Function: |
        sed -i 's/Acquire::http::Proxy/#Acquire::http::Proxy/' /etc/apt/apt.conf
        apt-get update
        apt-get install -y apt-transport-https linux-image-extra-virtual curl unzip jq
        apt-get install -y software-properties-common
        curl -fsSL "${docker_ee_url}/ubuntu/gpg" | sudo apt-key add -
        add-apt-repository "deb [arch=amd64] $docker_ee_url/ubuntu $(lsb_release -cs) stable-$EngineVersion"
        apt-get update
        apt-get -y install docker-ee
        sed -i "s#ExecStart=/usr/bin/dockerd#ExecStart=/usr/bin/dockerd --registry-mirror=https://6udu7vtl.mirror.aliyuncs.com --log-driver=json-file --log-opt max-size=100m --log-opt max-file=10#g" /lib/systemd/system/docker.service
        systemctl enable docker.service
        systemctl restart docker.service
        usermod -aG docker $USER
Parameters:
  DockerEEURL:
    Type: String
    Label: Docker EE URL
    Description: User's Docker EE installation URL
  UCPVersion:
    Type: String
    Label: Docker UCP Version
    Description: Docker Universal Control Plane Version
    Default: 3.1.7
    AllowedValues:
    - latest
    - 3.1.7
    - 3.0.2
  DTRVersion:
    Type: String
    Label: Docker DTR Version
    Description: Docker Trusted Registry Version
    Default: 2.6.6
    AllowedValues:
    - latest
    - 2.6.6
    - 2.5.3
  EngineVersion:
    Type: String
    Label: Docker Engine Version
    Description: Docker Enterprise Container Engine Version
    Default: '18.09'
    AllowedValues:
    - ''
    - '18.09'
    - '17.06'
  UCPAdminUserName:
    Type: String
    Label: UCP Admin Username
    Description: The username of Universal Control Plane (UCP) administrator, default
      is 'admin'
    Default: admin
  UCPAdminPassword:
    Type: String
    Label: UCP Admin Password
    Description: The administrator password of Universal Control Plane (UCP). The
      password is a string of 8 to 30 characters and must contain uppercase/lowercase
      letters, numbers.
    ConstraintDescription: Consist of alphanumeric characters
    AllowedPattern: '[a-zA-Z0-9]*'
    MinLength: '8'
    MaxLength: '41'
    NoEcho: true
    Confirm: true
  InstancePassword:
    Type: String
    Label: Instance Password
    Description: The root password of ECS instance. The password is a string of 8
      to 30 characters and must contain uppercase/lowercase letters, numbers.
    ConstraintDescription: Consist of alphanumeric characters
    AllowedPattern: '[a-zA-Z0-9-\(\)\`\~\!@\#\$%\^&\*-+=\|\{\}\[\]\:\;\â€˜\,\.\?\/]*'
    MinLength: '8'
    MaxLength: '41'
    NoEcho: true
    Confirm: true
  ControllerInstanceType:
    Type: String
    Label: Controller ECS Instance Type
    Description: The ECS instance type, <a href='#/product/cn-beijing/list/typeList'
      target='_blank'>View instance types</a>
    Default: ecs.c5.large
    AllowedValues:
    - ecs.c5.large
    - ecs.c5.xlarge
    - ecs.g5.large
    - ecs.g5.xlarge
  ControllerSystemDiskCategory:
    Type: String
    Label: Controller System Disk Category
    Description: Controller system disk category, default is 'cloud_ssd'
    Default: cloud_ssd
    AllowedValues:
    - cloud
    - cloud_efficiency
    - cloud_ssd
  ControllerSlaveMaxAmount:
    Type: Number
    Label: Number of slave controller
    Description: Select an additional Swarm Manager node (0, 2 or 4) to make the cluster,
      includes 1, 3 or 5 Swarm Manager nodes, constitute a highly available deployment
    Default: 0
    AllowedValues:
    - 0
    - 2
    - 4
  ControllerImageId:
    Type: String
    Label: Controller ECS Image Id
    Description: Image Id, represents the image resource to startup one ECS instance,
      <a href='#/product/cn-beijing/list/imageList' target='_blank'>View image resources</a>
    Default: ubuntu
  DTRInstanceType:
    Type: String
    Label: DTR ECS Instance Type
    Description: The ECS instance type, <a href='#/product/cn-beijing/list/typeList'
      target='_blank'>View instance types</a>
    Default: ecs.c5.large
    AllowedValues:
    - ecs.c5.large
    - ecs.c5.xlarge
    - ecs.g5.large
    - ecs.g5.xlarge
  DTRSystemDiskCategory:
    Type: String
    Label: DTR System Disk Category
    Description: DTR system disk category, default is 'cloud_ssd'
    Default: cloud_ssd
    AllowedValues:
    - cloud
    - cloud_efficiency
    - cloud_ssd
  DTRMaxAmount:
    Type: Number
    Label: Number of DTR
    Description: The number of Docker Trusted Registry (DTR) nodes.
    Default: 1
  DTRImageId:
    Type: String
    Label: DTR ECS Image Id
    Description: Image Id, represents the image resource to startup one ECS instance,
      <a href='#/product/cn-beijing/list/imageList' target='_blank'>View image resources</a>
    Default: ubuntu
  WorkerInstanceType:
    Type: String
    Label: Worker ECS Instance Type
    Description: The ECS instance type, <a href='#/product/cn-beijing/list/typeList'
      target='_blank'>View instance types</a>
    Default: ecs.c5.large
    AllowedValues:
    - ecs.c5.large
    - ecs.c5.xlarge
    - ecs.g5.large
    - ecs.g5.xlarge
  WorkerSystemDiskCategory:
    Type: String
    Label: Worker System Disk Category
    Description: Worker system disk category, default is 'cloud_ssd'
    Default: cloud_ssd
    AllowedValues:
    - cloud
    - cloud_efficiency
    - cloud_ssd
  WorkerMaxAmount:
    Type: Number
    Label: Number of Worker
    Description: The number of Swarm Worker nodes.
    Default: 1
  WorkerImageId:
    Type: String
    Label: Worker ECS Image Id
    Description: Image Id, represents the image resource to startup one ECS instance,
      <a href='#/product/cn-beijing/list/imageList' target='_blank'>View image resources</a>
    Default: ubuntu
Resources:
  DTRConditionHandle:
    Type: ALIYUN::ROS::WaitConditionHandle
    Properties: {}
  Vpc:
    Type: ALIYUN::ECS::VPC
    Properties:
      CidrBlock: 10.0.0.0/8
  DefaultSecurityGroup:
    Type: ALIYUN::ECS::SecurityGroup
    Properties:
      VpcId:
        Ref: Vpc
      Description: DDC default security group
      SecurityGroupIngress:
      - SourceCidrIp: 0.0.0.0/0
        IpProtocol: tcp
        NicType: intranet
        PortRange: 22/22
      - SourceCidrIp: 0.0.0.0/0
        IpProtocol: tcp
        NicType: intranet
        PortRange: 443/443
      - SourceCidrIp: 0.0.0.0/0
        IpProtocol: tcp
        NicType: intranet
        PortRange: 80/80
      - SourceCidrIp: 0.0.0.0/0
        IpProtocol: tcp
        NicType: intranet
        PortRange: 2377/2377
      SecurityGroupEgress:
      - IpProtocol: all
        DestCidrIp: 0.0.0.0/0
        NicType: intranet
        PortRange: -1/-1
        Priority: 1
  PubSubnet:
    Type: ALIYUN::ECS::VSwitch
    Properties:
      ZoneId:
        Fn::Select:
        - '1'
        - Fn::GetAZs:
            Ref: ALIYUN::Region
      VpcId:
        Fn::GetAtt:
        - Vpc
        - VpcId
      CidrBlock: 10.18.0.0/24
  DTRLoadBalancer:
    Type: ALIYUN::SLB::LoadBalancer
    Properties:
      LoadBalancerName: DTRLoadBalancer
      AddressType: internet
  ControllerLoadBalancer:
    Type: ALIYUN::SLB::LoadBalancer
    Properties:
      LoadBalancerName: ControllerLoadBalancer
      AddressType: internet
    DependsOn: DTRLoadBalancer
  NatGateway:
    Type: ALIYUN::ECS::NatGateway
    Properties:
      VpcId:
        Fn::GetAtt:
        - Vpc
        - VpcId
      VSwitchId:
        Ref: PubSubnet
      Spec: Small
      NatGatewayName: NatGateway
      BandwidthPackage:
      - IpCount: 2
        Bandwidth: 5
  SNatEntry:
    Type: ALIYUN::ECS::SNatEntry
    Properties:
      SNatIp:
        Fn::Select:
        - '0'
        - Fn::GetAtt:
          - NatGateway
          - BandwidthPackageIps
      SourceVSwitchId:
        Fn::GetAtt:
        - PubSubnet
        - VSwitchId
      SNatTableId:
        Fn::GetAtt:
        - NatGateway
        - SNatTableId
    DependsOn: ControllerLoadBalancer
  Controller:
    Type: ALIYUN::ECS::Instance
    Properties:
      VpcId:
        Ref: Vpc
      VSwitchId:
        Ref: PubSubnet
      SecurityGroupId:
        Fn::GetAtt:
        - DefaultSecurityGroup
        - SecurityGroupId
      ImageId:
        Ref: ControllerImageId
      IoOptimized: optimized
      Password:
        Ref: InstancePassword
      AllocatePublicIP: 'false'
      SystemDiskCategory:
        Ref: ControllerSystemDiskCategory
      UserData:
        Fn::Replace:
        - ros-notify:
            Fn::GetAtt:
            - ControllerConditionHandle
            - CurlCli
        - Fn::Join:
          - ''
          - - '#!/bin/sh

              '
            - EngineVersion='
            - Ref: EngineVersion
            - '''

              '
            - ucp_admin_username='
            - Ref: UCPAdminUserName
            - '''

              '
            - ucp_admin_password='
            - Ref: UCPAdminPassword
            - '''

              '
            - controller_slb_ip='
            - Fn::GetAtt:
              - ControllerLoadBalancer
              - IpAddress
            - '''

              '
            - docker_ee_url='
            - Ref: DockerEEURL
            - '''

              '
            - 'ip_addr=`ip addr | grep eth0 | grep -o ''[0-9]\{1,3\}\.[0-9]\{1,3\}\.[0-9]\{1,3\}\.[0-9]\{1,3\}/''
              | cut -d ''/'' -f 1`

              '
            - 'host_name=`hostname`

              '
            - Fn::FindInMap:
              - FunctionMap
              - InstallDocker
              - Function
            - 'docker container run --rm -i --name ucp -v /var/run/docker.sock:/var/run/docker.sock
              docker/ucp:'
            - Ref: UCPVersion
            - ' install --host-address $ip_addr --admin-username $ucp_admin_username
              --admin-password $ucp_admin_password --san $controller_slb_ip | tee
              -a /tmp/ucp_install_log

              '
            - 'worker_token=`docker swarm join-token -q worker`

              '
            - 'manager_token=`docker swarm join-token -q manager`

              '
            - 'echo $worker_token, $manager_token > /tmp/tokens

              '
            - 'cmd="ros-notify -d ''{\"id\" : \"tokens\", \"data\" : [\"$worker_token\",
              \"$manager_token\"]}''"

              '
            - 'eval $cmd

              '
      InstanceType:
        Ref: ControllerInstanceType
    DependsOn: SNatEntry
  DTRNode:
    Type: ALIYUN::ECS::InstanceGroup
    Properties:
      VpcId:
        Ref: Vpc
      VSwitchId:
        Ref: PubSubnet
      SecurityGroupId:
        Fn::GetAtt:
        - DefaultSecurityGroup
        - SecurityGroupId
      ImageId:
        Ref: DTRImageId
      IoOptimized: optimized
      Password:
        Ref: InstancePassword
      MinAmount:
        Ref: DTRMaxAmount
      AllocatePublicIP: 'false'
      SystemDiskCategory:
        Ref: DTRSystemDiskCategory
      UserData:
        Fn::Replace:
        - ros-notify:
            Fn::GetAtt:
            - DTRConditionHandle
            - CurlCli
        - Fn::Join:
          - ''
          - - '#!/bin/sh

              '
            - EngineVersion='
            - Ref: EngineVersion
            - '''

              '
            - ucp_admin_username='
            - Ref: UCPAdminUserName
            - '''

              '
            - ucp_admin_password='
            - Ref: UCPAdminPassword
            - '''

              '
            - tokens='
            - Fn::GetAtt:
              - ControllerWaitCondition
              - Data
            - '''

              '
            - ucp_controller_ip='
            - Fn::GetAtt:
              - Controller
              - PrivateIp
            - '''

              '
            - controller_slb_ip='
            - Fn::GetAtt:
              - ControllerLoadBalancer
              - IpAddress
            - '''

              '
            - dtr_slb_ip='
            - Fn::GetAtt:
              - DTRLoadBalancer
              - IpAddress
            - '''

              '
            - docker_ee_url='
            - Ref: DockerEEURL
            - '''

              '
            - 'ip_addr=`ip addr | grep eth0 | grep -o ''[0-9]\{1,3\}\.[0-9]\{1,3\}\.[0-9]\{1,3\}\.[0-9]\{1,3\}/''
              | cut -d ''/'' -f 1`

              '
            - 'host_name=`hostname`

              '
            - Fn::FindInMap:
              - FunctionMap
              - InstallDocker
              - Function
            - 'echo $tokens > /tmp/tokens

              '
            - 'token=`echo "$tokens" | jq ''.tokens''[0] | xargs echo `

              '
            - "echo $token > /tmp/worker_token \n"
            - 'docker swarm join --token=$token ${ucp_controller_ip}:2377

              '
            - 'sleep 30

              '
            - 'docker container run -i --rm docker/dtr:'
            - Ref: DTRVersion
            - ' install --ucp-url https://$controller_slb_ip:443 --ucp-node $host_name
              --dtr-external-url https://$dtr_slb_ip:443 --ucp-username $ucp_admin_username
              --ucp-password $ucp_admin_password --ucp-insecure-tls | tee -a /tmp/dtr_install_log

              '
            - 'echo $token > /tmp/fin_worker_token

              '
            - |
              if [ -z $token ]; then
                  data="Join-Token fetch failed"
              else
                  data="Join-Token token success"
              fi
            - 'cmd="ros-notify -d ''{\"data\" : \"$data\"}''"

              '
            - 'echo $cmd > /tmp/cmd_line

              '
            - 'eval $cmd

              '
            - 'echo $? > /tmp/eval_res

              '
      MaxAmount:
        Ref: DTRMaxAmount
      InstanceType:
        Ref: DTRInstanceType
    DependsOn: Controller
  DTRWaitCondition:
    Type: ALIYUN::ROS::WaitCondition
    Properties:
      Handle:
        Ref: DTRConditionHandle
      Timeout: 1800
      Count:
        Ref: DTRMaxAmount
    DependsOn: DTRNode
  ControllerSlave:
    Type: ALIYUN::ECS::InstanceGroup
    Condition: CreateSlaveUcp
    Properties:
      VpcId:
        Ref: Vpc
      VSwitchId:
        Ref: PubSubnet
      SecurityGroupId:
        Fn::GetAtt:
        - DefaultSecurityGroup
        - SecurityGroupId
      ImageId:
        Ref: ControllerImageId
      IoOptimized: optimized
      Password:
        Ref: InstancePassword
      MinAmount:
        Ref: ControllerSlaveMaxAmount
      AllocatePublicIP: 'false'
      SystemDiskCategory:
        Ref: ControllerSystemDiskCategory
      UserData:
        Fn::Replace:
        - ros-notify:
            Fn::GetAtt:
            - ControllerSlaveConditionHandle
            - CurlCli
        - Fn::Join:
          - ''
          - - '#!/bin/sh

              '
            - EngineVersion='
            - Ref: EngineVersion
            - '''

              '
            - tokens='
            - Fn::GetAtt:
              - ControllerWaitCondition
              - Data
            - '''

              '
            - ucp_controller_ip='
            - Fn::GetAtt:
              - Controller
              - PrivateIp
            - '''

              '
            - docker_ee_url='
            - Ref: DockerEEURL
            - '''

              '
            - 'ip_addr=`ip addr | grep eth0 | grep -o ''[0-9]\{1,3\}\.[0-9]\{1,3\}\.[0-9]\{1,3\}\.[0-9]\{1,3\}/''
              | cut -d ''/'' -f 1`

              '
            - 'host_name=`hostname`

              '
            - Fn::FindInMap:
              - FunctionMap
              - InstallDocker
              - Function
            - 'echo $tokens > /tmp/tokens

              '
            - 'token=`echo "$tokens" | jq ''.tokens''[1] | xargs echo `

              '
            - "echo $token > /tmp/manager_token \n"
            - 'cmd="ros-notify -d ''{\"data" : \"$token\"}'' | tee /tmp/test_tee"

              '
            - 'eval $cmd

              '
            - 'echo $? > /tmp/eval_res

              '
            - 'docker swarm join --token=$token ${ucp_controller_ip}:2377

              '
            - 'echo $token > /tmp/fin_manager_token

              '
      MaxAmount:
        Ref: ControllerSlaveMaxAmount
      InstanceType:
        Ref: ControllerInstanceType
    DependsOn: DTRWaitCondition
  ControllerSlaveConditionHandle:
    Type: ALIYUN::ROS::WaitConditionHandle
    Condition: CreateSlaveUcp
    Properties: {}
  ControllerSlaveWaitCondition:
    Type: ALIYUN::ROS::WaitCondition
    Condition: CreateSlaveUcp
    Properties:
      Handle:
        Ref: ControllerSlaveConditionHandle
      Timeout: 4000
      Count:
        Ref: ControllerSlaveMaxAmount
    DependsOn: ControllerSlave
  ControllerLoadBalancerListener443:
    Type: ALIYUN::SLB::Listener
    Properties:
      Persistence:
        StickySession: 'on'
        PersistenceTimeout: 600
      HealthCheck:
        Timeout: '2'
        Port: '443'
        Interval: '5'
        HealthyThreshold: '2'
        UnhealthyThreshold: '4'
      LoadBalancerId:
        Ref: ControllerLoadBalancer
      BackendServerPort: '443'
      Protocol: tcp
      Bandwidth: -1
      ListenerPort: '443'
    DependsOn: ControllerLoadBalancer
  ControllerSLBAttachment:
    Type: ALIYUN::SLB::BackendServerAttachment
    Properties:
      BackendServerList:
      - Fn::GetAtt:
        - Controller
        - InstanceId
      LoadBalancerId:
        Ref: ControllerLoadBalancer
  WorkerLoadBalancer:
    Type: ALIYUN::SLB::LoadBalancer
    Properties:
      LoadBalancerName: WorkerLoadBalancer
      AddressType: internet
  ControllerConditionHandle:
    Type: ALIYUN::ROS::WaitConditionHandle
    Properties: {}
  WorkerConditionHandle:
    Type: ALIYUN::ROS::WaitConditionHandle
    Properties: {}
  WorkerNode:
    Type: ALIYUN::ECS::InstanceGroup
    Properties:
      VpcId:
        Ref: Vpc
      VSwitchId:
        Ref: PubSubnet
      SecurityGroupId:
        Fn::GetAtt:
        - DefaultSecurityGroup
        - SecurityGroupId
      ImageId:
        Ref: WorkerImageId
      IoOptimized: optimized
      Password:
        Ref: InstancePassword
      MinAmount:
        Ref: WorkerMaxAmount
      AllocatePublicIP: 'false'
      SystemDiskCategory:
        Ref: WorkerSystemDiskCategory
      UserData:
        Fn::Replace:
        - ros-notify:
            Fn::GetAtt:
            - WorkerConditionHandle
            - CurlCli
        - Fn::Join:
          - ''
          - - '#!/bin/sh

              '
            - EngineVersion='
            - Ref: EngineVersion
            - '''

              '
            - tokens='
            - Fn::GetAtt:
              - ControllerWaitCondition
              - Data
            - '''

              '
            - ucp_controller_ip='
            - Fn::GetAtt:
              - Controller
              - PrivateIp
            - '''

              '
            - docker_ee_url='
            - Ref: DockerEEURL
            - '''

              '
            - 'ip_addr=`ip addr | grep eth0 | grep -o ''[0-9]\{1,3\}\.[0-9]\{1,3\}\.[0-9]\{1,3\}\.[0-9]\{1,3\}/''
              | cut -d ''/'' -f 1`

              '
            - 'host_name=`hostname`

              '
            - Fn::FindInMap:
              - FunctionMap
              - InstallDocker
              - Function
            - 'echo $tokens > /tmp/tokens

              '
            - 'token=`echo "$tokens" | jq ''.tokens''[0] | xargs echo `

              '
            - "echo $token > /tmp/worker_token \n"
            - 'cmd="ros-notify -d ''{\"data\" : \"$token\"}''"

              '
            - 'eval $cmd

              '
            - 'docker swarm join --token=$token ${ucp_controller_ip}:2377

              '
            - 'echo $token > /tmp/fin_worker_token

              '
      MaxAmount:
        Ref: WorkerMaxAmount
      InstanceType:
        Ref: WorkerInstanceType
    DependsOn: Controller
  JumpHost:
    Type: ALIYUN::ECS::Instance
    Properties:
      VpcId:
        Ref: Vpc
      VSwitchId:
        Ref: PubSubnet
      SecurityGroupId:
        Fn::GetAtt:
        - DefaultSecurityGroup
        - SecurityGroupId
      ImageId:
        Ref: WorkerImageId
      IoOptimized: optimized
      Password:
        Ref: InstancePassword
      AllocatePublicIP: 'false'
      SystemDiskCategory: cloud_efficiency
      InstanceType:
        Ref: ControllerInstanceType
    DependsOn: WorkerNode
  ForwardEntry:
    Type: ALIYUN::ECS::ForwardEntry
    Properties:
      IpProtocol: TCP
      ExternalIp:
        Fn::Select:
        - '1'
        - Fn::GetAtt:
          - NatGateway
          - BandwidthPackageIps
      ForwardTableId:
        Fn::GetAtt:
        - NatGateway
        - ForwardTableId
      ExternalPort: '22'
      InternalPort: '22'
      InternalIp:
        Fn::GetAtt:
        - JumpHost
        - PrivateIp
  DTRLoadBalancerListener:
    Type: ALIYUN::SLB::Listener
    Properties:
      Persistence:
        StickySession: 'on'
        PersistenceTimeout: 600
      HealthCheck:
        Timeout: '2'
        Port: '443'
        Interval: '5'
        HealthyThreshold: '2'
        UnhealthyThreshold: '4'
      LoadBalancerId:
        Ref: DTRLoadBalancer
      BackendServerPort: '443'
      Protocol: tcp
      Bandwidth: -1
      ListenerPort: '443'
    DependsOn: DTRLoadBalancer
  ControllerWaitCondition:
    Type: ALIYUN::ROS::WaitCondition
    Properties:
      Handle:
        Ref: ControllerConditionHandle
      Timeout: 1500
      Count: 1
    DependsOn: Controller
  WorkerWaitCondition:
    Type: ALIYUN::ROS::WaitCondition
    Properties:
      Handle:
        Ref: WorkerConditionHandle
      Timeout: 4000
      Count:
        Ref: WorkerMaxAmount
    DependsOn: WorkerNode
  ControllerSlaveSLBAttachment:
    Type: ALIYUN::SLB::BackendServerAttachment
    Condition: CreateSlaveUcp
    Properties:
      BackendServerList:
        Fn::GetAtt:
        - ControllerSlave
        - InstanceIds
      LoadBalancerId:
        Ref: ControllerLoadBalancer
  ControllerLoadBalancerListener2377:
    Type: ALIYUN::SLB::Listener
    Properties:
      Persistence:
        StickySession: 'on'
        PersistenceTimeout: 600
      HealthCheck:
        Timeout: '2'
        Port: '2377'
        Interval: '5'
        HealthyThreshold: '2'
        UnhealthyThreshold: '4'
      LoadBalancerId:
        Ref: ControllerLoadBalancer
      BackendServerPort: '2377'
      Protocol: tcp
      Bandwidth: -1
      ListenerPort: '2377'
    DependsOn: ControllerLoadBalancer
  DTRSLBAttachment:
    Type: ALIYUN::SLB::BackendServerAttachment
    Properties:
      BackendServerList:
        Fn::GetAtt:
        - DTRNode
        - InstanceIds
      LoadBalancerId:
        Ref: DTRLoadBalancer
  WorkerSLBAttachment:
    Type: ALIYUN::SLB::BackendServerAttachment
    Properties:
      BackendServerList:
        Fn::GetAtt:
        - WorkerNode
        - InstanceIds
      LoadBalancerId:
        Ref: WorkerLoadBalancer
Outputs:
  GetJoinTokenResult:
    Description: Get join-token result
    Value:
      Fn::GetAtt:
      - DTRWaitCondition
      - Data
  ControllerLoadBalancerIp:
    Description: Public ip for controller service
    Value:
      Fn::Join:
      - ''
      - - https://
        - Fn::GetAtt:
          - ControllerLoadBalancer
          - IpAddress
        - :443
  JumpHostIp:
    Description: Jump host IP
    Value:
      Fn::Select:
      - '1'
      - Fn::GetAtt:
        - NatGateway
        - BandwidthPackageIps
  DTRLoadBalancerIp:
    Description: Public ip for DTR service
    Value:
      Fn::Join:
      - ''
      - - https://
        - Fn::GetAtt:
          - DTRLoadBalancer
          - IpAddress
        - :443
  WorkerLoadBalancerIp:
    Description: Public ip for Worker service
    Value:
      Fn::GetAtt:
      - WorkerLoadBalancer
      - IpAddress
